<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ProjectVoid详解</title>
      <link href="/posts/61401.html"/>
      <url>/posts/61401.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>该项目通过其他开源项目衍生而来，通过 QtC++框架实现了一个类似黎明前为 20 分钟的肉鸽游戏，可以通过学习该项目来巩固和提高 qt 编程能力</p></blockquote><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Three-summers/ProjectVoid/tree/master">github</a><br>可以向该项目提 pr 来帮助我发现该项目的 bug 并修改</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在项目中找到 download 目录，下载其中的压缩包<br><a href="https://github.com/Three-summers/ProjectVoid/tree/master/ProjectVoid-master/download">地址</a><br>或者<br><a href="https://pan.baidu.com/s/1R8XjuDZySRVoqL5CWoobUg">百度网盘</a><br>提取码：rs2a</p><h2 id="解释源码"><a href="#解释源码" class="headerlink" title="解释源码"></a>解释源码</h2><p>注：+为 public，@为 protected，-为 private，%为 signals</p><h3 id="子弹类"><a href="#子弹类" class="headerlink" title="子弹类"></a>子弹类</h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  classDiagrambulletBase &lt;|-- bulletDmrbulletBase &lt;|-- bulletEnemybulletBase &lt;|-- bulletSmartbulletBase &lt;|-- bulletSmgbulletBase &lt;|-- bulletShotgunclass bulletBase {+explicit BulletBase()+static QTimer #42; m_timer_static@void enemyHitCheck()@void move()@QGraphicsScene #42; m_scene@qreal m_speed@qreal m_damage@int m_penetration@QList&lt;EnemyBase#42;&gt; hurt_enemy_list@int hurt_count}class bulletDmr {+explicit BulletDmr()}class bulletEnemy{+explicit BulletEnemy()-void playerHitCheck()}class bulletSmart{+explicit BulletSmart()-void track()}class bulletSmg{+explicit BulletSmg()}class bulletShotgun{+explicit BulletShotgun()}  </pre></div><h3 id="怪物类"><a href="#怪物类" class="headerlink" title="怪物类"></a>怪物类</h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  classDiagramenemyBase &lt;|-- enemyBotenemyBase &lt;|-- enemyExplosiveBaseenemyBase &lt;|-- enemyRangedDroneenemyExplosiveBase &lt;|-- enemyExplosiveBallenemyRangedDrone &lt;|-- enemyRangedDroneEliteenemyBot &lt;|-- enemyBotEliteclass enemyBase{+explicit EnemyBase()+void hurt()+static QTimer #42;m_timer_static+static QSoundEffect #42;sfx_enemy_hurt%void enemyDeath()@Player *m_player@qreal speed@qreal health@int xp@QGraphicsScene #42;m_scene@QTimer hurt_timer@bool is_hurt@virtual void death()@virtual void mobMove()@void hitBoxCheck()@virtual void load() &#x3D; 0@void hurt_reload()@static QRectF pilebounds1@static QRectF pilebounds2@static QRectF pilebounds3@static QRectF pilebounds4@static QRectF pilebounds5}class enemyBot{+explicit EnemyBot(）-void load() override-QMovie #42;m_movie}class enemyBotElite{+explicit EnemyBotElite()-void load() override-QMoive #42;m_movie}class enemyExplosiveBase{+explicit EnemyExplosiveBase()@qreal explosion_range@qreal explosion_damage@virtual void explode() &#x3D; 0@void death() override@void enemyHitCheck()@QSoundEffect *sfx_explosion}class enemyExplosiveBall{explicit EnemyExplosiveBall()-void load() override-void explode()-QPixmap pix-QMovie #42;fx_explosion}class enemyRangedDrone{+explicit EnemyRangedBase()@void mobMove() override@virtual void attack() &#x3D; 0@void angleChange()@qreal angle@int angle_change_count@int angle_change_ceil}class enemyRangedDroneElite{+explicit EnemyRangedDroneElite()-void load() override-void attack() override-int attack_count-const int attack_ceil-QPixmap pix}  </pre></div><h3 id="武器类"><a href="#武器类" class="headerlink" title="武器类"></a>武器类</h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  classDiagramweaponMod &lt;|-- weaponBaseweaponBase &lt;|-- weaponDmrweaponBase &lt;|-- weaponShotgunweaponBase &lt;|-- weaponSmartweaponBase &lt;|-- weaponSmgclass weaponMod{+explicit WeaponMod()+void resetButton()%void weaponSelected()-int sign-int w_index-QString m_weapon-QGraphicsSelectiveButton *icon-QGraphicsTextItem *desc-QGraphicsScene \*m_scene-void hoverEnter()-void hoverLeave()-void mouseClick()-void setWeapon()}class weaponDmr{+explicit WeaponDmr()+void fire()}class weaponBase{+explicit EnemyBase()+void hurt()+static QTimer #42;m_timer_static+static QSoundEffect #42;sfx_enemy_hurt%void enemyDeath()@Player #42;m_player@qreal speed@qreal health@int xp@QGraphicsScene #42;m_scene@QTimer hurt_timer@bool is_hurt@virtual void death()@virtual void mobMove()@void hitBoxCheck()@virtual void load() &#x3D; 0@void hurt_reload()@static QRectF pilebounds1@static QRectF pilebounds2@static QRectF pilebounds3@static QRectF pilebounds4@static QRectF pilebounds5}class weaponShotgun{+explicit WeaponShotgun()+void fire() override}class weaponSmart{+explicit WeaponSmart()+void fire() override}class weaponSmg{+explicit WeaponSmg()+void fire() override}  </pre></div><p>注：该 weaponMod 类为接口类</p><h3 id="按钮类"><a href="#按钮类" class="headerlink" title="按钮类"></a>按钮类</h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  classDiagramqGraphicsButton &lt;|-- qGraphicsSelectiveButtonclass qGraphicsButton{+QGraphicsButton()%void hoverEnter()%void hoverLeave()%void mouseClick()@void hoverEnterEvent() override@void hoverLeaveEvent() override@void mouseClickEvent() override@QString ic_path@bool is_hovered &#x3D; false@bool is_pressed &#x3D; false}class qGraphicsSelectiveButton{+explicit QGraphicsSelectiveButton()+void resetStatus()%void selected()@void hoverEnterEvent() override@void hoverLeaveEvent() override@void mousePressEvent() override@void mouseReleaseEvent() override-bool is_selected &#x3D; false}  </pre></div><h3 id="其他类"><a href="#其他类" class="headerlink" title="其他类"></a>其他类</h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph LRenemyBase --&gt; bulletBasebulletBase --&gt;weaponBaseplayer --&gt; weaponBaseplayer --&gt; enemyBaseplayer --&gt; expexp --&gt; enemyBasearchiveMod --&gt; startMenushopItem --&gt; startMenuweaponMod --&gt; startMenuqGraphicsButton --&gt; upgradeModplayer --&gt; upgradeModweaponBase --&gt; upgradeModstartMenu --&gt; gameWidgetgameEngine --&gt; gameWidgetheartLabel --&gt; gameEngineplayer --&gt; gameEngineweaponBase --&gt; gameEnginearchiveMod --&gt; gameEngineupgradeMod --&gt; gameEngineexp --&gt; gameEnginebulletBase --&gt; gameEngineenemy* --&gt; gameEngineweapon* --&gt; gameEngineqGraphicsButton --&gt; archiveModgameWidget --&gt; mainweaponBase --&gt; weapon*enemyBase --&gt; enemy*  </pre></div><p>基本逻辑如上</p><h2 id="可更新问题"><a href="#可更新问题" class="headerlink" title="可更新问题"></a>可更新问题</h2><h3 id="在暂停-升级时会卡顿"><a href="#在暂停-升级时会卡顿" class="headerlink" title="在暂停&#x2F;升级时会卡顿"></a>在暂停&#x2F;升级时会卡顿</h3><h3 id="存档时怪物位置无法存储问题"><a href="#存档时怪物位置无法存储问题" class="headerlink" title="存档时怪物位置无法存储问题"></a>存档时怪物位置无法存储问题</h3><h3 id="在升级时再按暂停游戏闪退"><a href="#在升级时再按暂停游戏闪退" class="headerlink" title="在升级时再按暂停游戏闪退"></a>在升级时再按暂停游戏闪退</h3><h3 id="搜索技能时可以通过使用哈希表来优化速度"><a href="#搜索技能时可以通过使用哈希表来优化速度" class="headerlink" title="搜索技能时可以通过使用哈希表来优化速度"></a>搜索技能时可以通过使用哈希表来优化速度</h3><h3 id="添加本地排行榜"><a href="#添加本地排行榜" class="headerlink" title="添加本地排行榜"></a>添加本地排行榜</h3><h3 id="添加网络排行榜"><a href="#添加网络排行榜" class="headerlink" title="添加网络排行榜"></a>添加网络排行榜</h3>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim的基本操作</title>
      <link href="/posts/52047.html"/>
      <url>/posts/52047.html</url>
      
        <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote><p>是一个流行在终端的编辑器，Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p></blockquote><hr><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><h4 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h4><ul><li><strong>正常模式</strong>：在文件中四处移动光标进行修改</li><li><strong>插入模式</strong>：插入文本</li><li><strong>替换模式</strong>：替换文本</li><li><strong>可视化模式</strong>（一般&#x2F;行&#x2F;块）：选中文本块</li><li><strong>命令模式</strong>：用于执行命令</li></ul><p>补充操作：在任何模式按下<code>&lt;ESC&gt;</code>（退出键）可以进入正常模式，键<code>i</code>进入插入模式，键<code>R</code>进入替换模式，键<code>v</code>进入可视（一般）模式，键<code>V</code>进入可视（行）模式，组合键<code>&lt;C-v&gt;</code>进入可视（块）模式，键<code>:</code>进入命令模式。</p><h4 id="缓存，标签页，窗口"><a href="#缓存，标签页，窗口" class="headerlink" title="缓存，标签页，窗口"></a>缓存，标签页，窗口</h4><blockquote><p>Vim 会维护一系列打开的文件，称为“缓存”。一个 Vim 会话包含一系列标签页，每个标签页包含一系列窗口（分隔面板）。每个窗口显示一个缓存。跟网页浏览器等其他你熟悉的程序不一样的是， <strong>缓存和窗口不是一一对应的关系</strong>；窗口只是视角。一个缓存可以在多个窗口打开，甚至在同一个标签页内的多个窗口打开。这个功能其实很好用，比如在查看同一个文件的不同部分的时候。Vim 默认打开一个标签页，这个标签也包含一个窗口。</p></blockquote><h4 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h4><ul><li><code>:q</code>如没修改可以退出</li><li><code>:w</code>保存</li><li><code>:wq</code>保存并退出</li><li><code>:q!</code>不保存并退出</li><li><code>:e&#123;文件名&#125;</code>打开要编辑的文件</li><li><code>:ls</code>显示打开的缓存</li><li><code>:help&#123;标题&#125;</code>打开帮助文档<ul><li><code>:help :w</code>打开<code>:w</code>命令的帮助文档</li><li><code>:help w</code>打开<code>w</code>移动的帮助文档</li></ul></li></ul><h4 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h4><ul><li>基本移动：<code>hjkl</code>（左，下，上，右）</li><li>词：<code>w</code>（下一个词），<code>b</code>（词初），<code>e</code>（词尾）</li><li>行：<code>0</code>（行初），<code>^</code>（第一个非空字符），<code>占字符$</code>（行尾），<code>g_</code>(最后一个非空字符)</li><li>屏幕：<code>H</code>（屏幕首行），<code>M</code>（屏幕中间），<code>L</code>（屏幕底部）</li><li>翻页：<code>&lt;C-u&gt;</code>（上翻），<code>&lt;C-d&gt;</code>（下翻）</li><li>文件：<code>gg</code>（文件头），<code>G</code>（文件尾）</li><li>行数：<code>:&#123;行数&#125;&lt;CR&gt;</code>或者<code>&#123;行数&#125;G</code></li><li>杂项：<code>%</code>（找到配对，比如括号和&#x2F;* *&#x2F;等的注释对）</li><li>查找：<code>f&#123;字符&#125;</code>，<code>t&#123;字符&#125;</code>，<code>F&#123;字符&#125;</code>，<code>T&#123;字符&#125;</code><ul><li>查找&#x2F;到 向前&#x2F;向后 在本行的字符</li><li><code>,</code>&#x2F;<code>;</code>用于导航匹配</li></ul></li><li>搜索：<code>/&#123;正则表达式&#125;</code>，<code>n</code>&#x2F;<code>N</code>用于导航匹配</li></ul><h4 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h4><ul><li><code>i</code>进入插入模式<ul><li>但是对于操纵&#x2F;编辑文本，不单想用退格键完成</li></ul></li><li><code>O</code>&#x2F;<code>o</code>在之上&#x2F;之下插入行</li><li><code>d&#123;移动命令&#125;</code> 删除{移动命令}<ul><li>例如，<code>dw</code>删除词, <code>d$</code> 删除到行尾, <code>d0</code>删除到行头。</li></ul></li><li><code>c&#123;移动命令&#125;</code>改变{移动命令}<ul><li>例如，<code>cw</code>改变词，比如 <code>d&#123;移动命令&#125;</code> 再<code>i</code></li></ul></li><li><code>x</code>删除字符（等同于<code>dl</code>）</li><li><code>s</code>替换字符（等同于<code>xi</code>）<ul><li><code>可视化模式+操作</code><br>选中文字，<code>d</code>删除或者<code>c</code>改变</li></ul></li><li><code>u</code>撤销，<code>&lt;C-r&gt;</code>重做</li><li><code>y</code>复制（其他一些命令比如<code>d</code>也会复制）</li><li><code>p</code>粘贴</li><li><code>~</code>改变字符的大小写</li></ul><h4 id="修饰语"><a href="#修饰语" class="headerlink" title="修饰语"></a>修饰语</h4><ul><li><code>i</code>表示内部</li><li><code>a</code>表示周围</li><li>如：<code>ci(</code>改变当前括号的内容，<code>ci[</code>改变当前方括号的内容，<code>da&#39;</code>删除一个单引号字符串，包括周围的单引号</li><li>注：移动能与编辑构成<code>名词-动词</code>的组合，如<code>2dw</code>删除两个词，<code>3w</code>向前移动三个词</li></ul><h4 id="搜索和替换"><a href="#搜索和替换" class="headerlink" title="搜索和替换"></a>搜索和替换</h4><p><code>:s</code>（替换命令）（<a href="https://vim.fandom.com/wiki/Search_and_replace">文档</a>）</p><ul><li><code>:%s/foo/bar/g</code>文件全局将 foo 替换成 bar</li><li><code>:s/foo/bar/g</code>该行将 foo 替换成 bar</li><li><code>:5,12s/foo/bar/g</code>5-12 行替换</li><li><code>:&#39;a,&#39;bs/foo/bar/g</code>从标记 a 到标记 b 替换</li><li><code>:&#39;&lt;,&#39;&gt;s/foo/bar/g</code>用于在可视化所选择的范围中替换</li><li><code>:.,$s/foo/bar/g</code>从当前行到最后一行替换</li><li><code>:.,+2sfoo/bar/g</code>从当前行到后两行替换</li><li><code>:g/^baz/s/foo/bar/g</code>首行是 baz 的替换</li></ul><h4 id="多窗口"><a href="#多窗口" class="headerlink" title="多窗口"></a>多窗口</h4><ul><li>用<code>:sp</code>&#x2F;<code>:vsp</code>分割窗口</li><li>同一个缓存在多个窗口显示</li></ul><h4 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h4><ul><li><code>q&#123;字符&#125;</code> 来开始在寄存器<code>&#123;字符&#125;</code>中录制宏</li><li><code>q</code>停止录制</li><li><code>@&#123;字符&#125;</code>重放宏，宏的执行遇错误会停止</li><li><code>&#123;计数&#125;@&#123;字符&#125;</code>执行一个宏{计数}次</li><li>宏可以递归<ul><li>首先用<code>q&#123;字符&#125;q</code>清除宏</li><li>录制该宏，用<code>@&#123;字符&#125;</code>来递归调用该宏（在录制完成之前不会有任何操作）</li></ul></li></ul><hr><h3 id="自定义-vim"><a href="#自定义-vim" class="headerlink" title="自定义 vim"></a>自定义 vim</h3><h4 id="vim-扩展"><a href="#vim-扩展" class="headerlink" title="vim 扩展"></a>vim 扩展</h4><p>敬请期待</p><h4 id="vim-配置文件"><a href="#vim-配置文件" class="headerlink" title="vim 配置文件"></a>vim 配置文件</h4><p>如下：</p><pre class="line-numbers language-Vim" data-language="Vim"><div class="caption"><span>Script</span></div><code class="language-Vim">syntax on &quot;自动语法高亮&quot;winpos 5 5          &quot; 设定窗口位置&quot;set lines&#x3D;40 columns&#x3D;155    &quot; 设定窗口大小&quot;set nu              &quot; 显示行号set go&#x3D;             &quot; 不要图形按钮&quot;color asmanian2     &quot; 设置背景主题set guifont&#x3D;Courier_New:h10:cANSI   &quot; 设置字体&quot;syntax on           &quot; 语法高亮&quot;autocmd InsertLeave * se nocul  &quot; 用浅色高亮当前行&quot;autocmd InsertEnter * se cul    &quot; 用浅色高亮当前行&quot;set ruler           &quot; 显示标尺set showcmd         &quot; 输入的命令显示出来，看的清楚些&quot;set cmdheight&#x3D;1     &quot; 命令行（在状态行下）的高度，设置为1&quot;set whichwrap+&#x3D;&lt;,&gt;,h,l   &quot; 允许backspace和光标键跨越行边界(不建议)&quot;set scrolloff&#x3D;3     &quot; 光标移动到buffer的顶部和底部时保持3行距离set novisualbell    &quot; 不要闪烁(不明白)&quot;set statusline&#x3D;%F%m%r%h%w\ [FORMAT&#x3D;%&#123;&amp;ff&#125;]\ [TYPE&#x3D;%Y]\ [POS&#x3D;%l,%v][%p%%]\ %&#123;strftime(\&quot;%d&#x2F;%m&#x2F;%y\ -\ %H:%M\&quot;)&#125;   &quot;状态行显示的内容&quot;set laststatus&#x3D;1    &quot; 启动显示状态行(1),总是显示状态行(2)set foldenable      &quot; 允许折叠set foldmethod&#x3D;manual   &quot; 手动折叠&quot;set background&#x3D;dark &quot;背景使用黑色set nocompatible  &quot;去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限&quot; 显示中文帮助if version &gt;&#x3D; 603    set helplang&#x3D;cn    set encoding&#x3D;utf-8endif&quot; 设置配色方案&quot;colorscheme murphy&quot;字体&quot;if (has(&quot;gui_running&quot;))&quot;   set guifont&#x3D;Bitstream\ Vera\ Sans\ Mono\ 10&quot;endifset fencs&#x3D;utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936set termencoding&#x3D;utf-8set encoding&#x3D;utf-8set fileencodings&#x3D;ucs-bom,utf-8,cp936set fileencoding&#x3D;utf-8&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;新文件标题&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;新建.c,.h,.sh,.java文件，自动插入文件头autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec &quot;:call SetTitle()&quot;&quot;&quot;定义函数SetTitle，自动插入文件头func SetTitle()    &quot;如果文件类型为.sh文件    if &amp;filetype &#x3D;&#x3D; &#39;sh&#39;        call setline(1,&quot;\#########################################################################&quot;)        call append(line(&quot;.&quot;), &quot;\# File Name: &quot;.expand(&quot;%&quot;))        call append(line(&quot;.&quot;)+1, &quot;\# Author: 冷倾殇&quot;)        call append(line(&quot;.&quot;)+2, &quot;\# mail: 1500428751@qq.com&quot;)        call append(line(&quot;.&quot;)+3, &quot;\# Created Time: &quot;.strftime(&quot;%c&quot;))        call append(line(&quot;.&quot;)+4, &quot;\#########################################################################&quot;)        call append(line(&quot;.&quot;)+5, &quot;\#!&#x2F;bin&#x2F;bash&quot;)        call append(line(&quot;.&quot;)+6, &quot;&quot;)    else        call setline(1, &quot;&#x2F;*************************************************************************&quot;)        call append(line(&quot;.&quot;), &quot;    &gt; File Name: &quot;.expand(&quot;%&quot;))        call append(line(&quot;.&quot;)+1, &quot;    &gt; Author: 冷倾殇&quot;)        call append(line(&quot;.&quot;)+2, &quot;    &gt; Mail: 1500428751@qq.com &quot;)        call append(line(&quot;.&quot;)+3, &quot;    &gt; Created Time: &quot;.strftime(&quot;%c&quot;))        call append(line(&quot;.&quot;)+4, &quot; ************************************************************************&#x2F;&quot;)        call append(line(&quot;.&quot;)+5, &quot;&quot;)    endif &quot;   if &amp;filetype &#x3D;&#x3D; &#39;cpp&#39; &quot;       call append(line(&quot;.&quot;)+6, &quot;#include&lt;iostream&gt;&quot;) &quot;       call append(line(&quot;.&quot;)+7, &quot;using namespace std;&quot;) &quot;       call append(line(&quot;.&quot;)+8, &quot;&quot;) &quot;   endif &quot;   if &amp;filetype &#x3D;&#x3D; &#39;c&#39; &quot;       call append(line(&quot;.&quot;)+6, &quot;#include&lt;stdio.h&gt;&quot;) &quot;       call append(line(&quot;.&quot;)+7, &quot;&quot;) &quot;   endif    &quot;新建文件后，自动定位到文件末尾    autocmd BufNewFile * normal Gendfunc&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;键盘命令&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;nmap &lt;leader&gt;w :w!&lt;cr&gt;nmap &lt;leader&gt;f :find&lt;cr&gt;&quot; 映射全选+复制 ctrl+amap &lt;C-A&gt; ggVGYmap! &lt;C-A&gt; &lt;Esc&gt;ggVGYmap &lt;F12&gt; gg&#x3D;G&quot; 选中状态下 Ctrl+c 复制vmap &lt;C-c&gt; &quot;+y&quot;去空行nnoremap &lt;F2&gt; :g&#x2F;^\s*$&#x2F;d&lt;CR&gt;&quot;比较文件nnoremap &lt;C-F2&gt; :vert diffsplit&quot;新建标签map &lt;M-F2&gt; :tabnew&lt;CR&gt;&quot;列出当前目录文件map &lt;F3&gt; :tabnew .&lt;CR&gt;&quot;打开树状文件目录map &lt;C-F3&gt; \be&quot;C，C++ 按F5编译运行map &lt;F5&gt; :call CompileRunGcc()&lt;CR&gt;func! CompileRunGcc()    exec &quot;w&quot;    if &amp;filetype &#x3D;&#x3D; &#39;c&#39;        exec &quot;!g++ % -o %&lt;&quot;        exec &quot;! .&#x2F;%&lt;&quot;    elseif &amp;filetype &#x3D;&#x3D; &#39;cpp&#39;        exec &quot;!g++ % -o %&lt;&quot;        exec &quot;! .&#x2F;%&lt;&quot;    elseif &amp;filetype &#x3D;&#x3D; &#39;java&#39;        exec &quot;!javac %&quot;        exec &quot;!java %&lt;&quot;    elseif &amp;filetype &#x3D;&#x3D; &#39;sh&#39;        :!.&#x2F;%    endifendfunc&quot;C,C++的调试map &lt;F8&gt; :call Rungdb()&lt;CR&gt;func! Rungdb()    exec &quot;w&quot;    exec &quot;!g++ % -g -o %&lt;&quot;    exec &quot;!gdb .&#x2F;%&lt;&quot;endfunc&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;实用设置&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; 设置当文件被改动时自动载入set autoread&quot; quickfix模式autocmd FileType c,cpp map &lt;buffer&gt; &lt;leader&gt;&lt;space&gt; :w&lt;cr&gt;:make&lt;cr&gt;&quot;代码补全set completeopt&#x3D;preview,menu&quot;允许插件filetype plugin on&quot;共享剪贴板set clipboard+&#x3D;unnamed&quot;从不备份set nobackup&quot;make 运行:set makeprg&#x3D;g++\ -Wall\ \ %&quot;自动保存set autowrite&quot;set ruler                   &quot; 打开状态栏标尺set cursorline              &quot; 突出显示当前行set magic                   &quot; 设置魔术set guioptions-&#x3D;T           &quot; 隐藏工具栏set guioptions-&#x3D;m           &quot; 隐藏菜单栏&quot;set statusline&#x3D;\ %&lt;%F[%1*%M%*%n%R%H]%&#x3D;\ %y\ %0(%&#123;&amp;fileformat&#125;\ %&#123;&amp;encoding&#125;\ %c:%l&#x2F;%L%)\&quot; 设置在状态行显示的信息set foldcolumn&#x3D;0set foldmethod&#x3D;indentset foldlevel&#x3D;3set foldenable              &quot; 开始折叠&quot; 不要使用vi的键盘模式，而是vim自己的set nocompatible&quot; 语法高亮set syntax&#x3D;on&quot; 去掉输入错误的提示声音set noeb&quot; 在处理未保存或只读文件的时候，弹出确认set confirm&quot; 自动缩进set autoindentset cindent&quot; Tab键的宽度set tabstop&#x3D;4&quot; 统一缩进为4set softtabstop&#x3D;4set shiftwidth&#x3D;4&quot; 不要用空格代替制表符set noexpandtab&quot; 在行和段开始处使用制表符set smarttab&quot; 显示行号set number&quot; 历史记录数set history&#x3D;1000&quot;禁止生成临时文件set nobackupset noswapfile&quot;搜索忽略大小写set ignorecase&quot;搜索逐字符高亮set hlsearchset incsearch&quot;行内替换set gdefault&quot;编码设置set enc&#x3D;utf-8set fencs&#x3D;utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936&quot;语言设置set langmenu&#x3D;zh_CN.UTF-8set helplang&#x3D;cn&quot; 我的状态行显示的内容（包括文件类型和解码）&quot;set statusline&#x3D;%F%m%r%h%w\ [FORMAT&#x3D;%&#123;&amp;ff&#125;]\ [TYPE&#x3D;%Y]\ [POS&#x3D;%l,%v][%p%%]\ %&#123;strftime(\&quot;%d&#x2F;%m&#x2F;%y\ -\ %H:%M\&quot;)&#125;&quot;set statusline&#x3D;[%F]%y%r%m%*%&#x3D;[Line:%l&#x2F;%L,Column:%c][%p%%]&quot; 总是显示状态行&quot;set laststatus&#x3D;2&quot; 命令行（在状态行下）的高度，默认为1，这里是2set cmdheight&#x3D;2&quot; 侦测文件类型filetype on&quot; 载入文件类型插件filetype plugin on&quot; 为特定文件类型载入相关缩进文件filetype indent on&quot; 保存全局变量set viminfo+&#x3D;!&quot; 带有如下符号的单词不要被换行分割set iskeyword+&#x3D;_,$,@,%,#,-&quot; 字符间插入的像素行数目set linespace&#x3D;0&quot; 增强模式中的命令行自动完成操作set wildmenu&quot; 使回格键（backspace）正常处理indent, eol, start等set backspace&#x3D;2&quot; 允许backspace和光标键跨越行边界set whichwrap+&#x3D;&lt;,&gt;,h,l&quot; 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）set mouse&#x3D;aset selection&#x3D;exclusiveset selectmode&#x3D;mouse,key&quot; 通过使用: commands命令，告诉我们文件的哪一行被改变过set report&#x3D;0&quot; 在被分割的窗口间显示空白，便于阅读set fillchars&#x3D;vert:\ ,stl:\ ,stlnc:\&quot; 高亮显示匹配的括号set showmatch&quot; 匹配括号高亮的时间（单位是十分之一秒）set matchtime&#x3D;1&quot; 光标移动到buffer的顶部和底部时保持3行距离set scrolloff&#x3D;3&quot; 为C程序提供自动缩进set smartindent&quot; 高亮显示普通txt文件（需要txt.vim脚本）au BufRead,BufNewFile *  setfiletype txt&quot;自动补全:inoremap ( ()&lt;ESC&gt;i:inoremap ) &lt;c-r&gt;&#x3D;ClosePair(&#39;)&#39;)&lt;CR&gt;:inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;O:inoremap &#125; &lt;c-r&gt;&#x3D;ClosePair(&#39;&#125;&#39;)&lt;CR&gt;:inoremap [ []&lt;ESC&gt;i:inoremap ] &lt;c-r&gt;&#x3D;ClosePair(&#39;]&#39;)&lt;CR&gt;:inoremap &quot; &quot;&quot;&lt;ESC&gt;i:inoremap &#39; &#39;&#39;&lt;ESC&gt;ifunction! ClosePair(char)    if getline(&#39;.&#39;)[col(&#39;.&#39;) - 1] &#x3D;&#x3D; a:char        return &quot;\&lt;Right&gt;&quot;    else        return a:char    endifendfunctionfiletype plugin indent on&quot;打开文件类型检测, 加了这句才可以用智能补全set completeopt&#x3D;longest,menu&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; CTags的设定&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;let Tlist_Sort_Type &#x3D; &quot;name&quot;    &quot; 按照名称排序let Tlist_Use_Right_Window &#x3D; 1  &quot; 在右侧显示窗口let Tlist_Compart_Format &#x3D; 1    &quot; 压缩方式let Tlist_Exist_OnlyWindow &#x3D; 1  &quot; 如果只有一个buffer，kill窗口也kill掉bufferlet Tlist_File_Fold_Auto_Close &#x3D; 0  &quot; 不要关闭其他文件的tagslet Tlist_Enable_Fold_Column &#x3D; 0    &quot; 不要显示折叠树autocmd FileType java set tags+&#x3D;D:\tools\java\tags&quot;autocmd FileType h,cpp,cc,c set tags+&#x3D;D:\tools\cpp\tags&quot;let Tlist_Show_One_File&#x3D;1            &quot;不同时显示多个文件的tag，只显示当前文件的&quot;设置tagsset tags&#x3D;tags&quot;set autochdir&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;其他东东&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;默认打开Taglistlet Tlist_Auto_Open&#x3D;1&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; Tag list (ctags)&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;let Tlist_Ctags_Cmd &#x3D; &#39;&#x2F;usr&#x2F;bin&#x2F;ctags&#39;let Tlist_Show_One_File &#x3D; 1 &quot;不同时显示多个文件的tag，只显示当前文件的let Tlist_Exit_OnlyWindow &#x3D; 1 &quot;如果taglist窗口是最后一个窗口，则退出vimlet Tlist_Use_Right_Window &#x3D; 1 &quot;在右侧窗口中显示taglist窗口&quot; minibufexpl插件的一般设置let g:miniBufExplMapWindowNavVim &#x3D; 1let g:miniBufExplMapWindowNavArrows &#x3D; 1let g:miniBufExplMapCTabSwitchBufs &#x3D; 1let g:miniBufExplModSelTarget &#x3D; 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><a href="https://www.cnblogs.com/XNQC1314/p/8692993.html">参考</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 关于Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>termux的使用</title>
      <link href="/posts/8927.html"/>
      <url>/posts/8927.html</url>
      
        <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote><p>termux 是一个安卓终端模拟器，具有 Linux 环境，具有最小基本系统，使用 APT 包管理器可以获得其它包。因此可以在 termux 实现几乎在 Linux 上的所有操作，比如可以使用 ssh 远程连接主机，使用 gcc g++ make 等编辑器，更或者是使用 MySQL 等等操作。</p></blockquote><hr><h3 id="如何下载？"><a href="#如何下载？" class="headerlink" title="如何下载？"></a>如何下载？</h3><ul><li>在谷歌商店搜索 termux 并下载</li><li>在浏览器中找一个靠谱的下载</li><li>在 termux 的开源地址<a href="https://github.com/termux/termux-app#github">github</a>上下载</li><li>注：在 github 网络连接不稳定，可以使用科学上网来解决</li></ul><hr><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p>由于 termux 是基于 Linux 的最小基本系统，所以应该具有如下的 Linux 命令基础</p><ul><li>Linux 基本命令</li><li>git 基本命令</li><li>vim 基本操作（可以使用 nano 代替）</li></ul><h4 id="Linux-基本命令"><a href="#Linux-基本命令" class="headerlink" title="Linux 基本命令"></a>Linux 基本命令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token comment">#查看目录</span><span class="token builtin class-name">pwd</span> <span class="token comment">#查看当前路径</span><span class="token builtin class-name">cd</span> <span class="token comment">#切换到目标路径</span><span class="token function">vim</span> <span class="token comment">#启动vim</span><span class="token function">mv</span> <span class="token comment">#移动文件/目录/重命名</span><span class="token function">rm</span> <span class="token comment">#删除</span><span class="token comment">#--help/man都可以查看帮助文档</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://note.youdao.com/s/b5IeRnvP">我的 Linux 笔记</a></p><h4 id="git-基本命令"><a href="#git-基本命令" class="headerlink" title="git 基本命令"></a>git 基本命令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token comment">#克隆项目</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://note.youdao.com/s/SAgbUXUC">我的 git 笔记</a></p><h4 id="vim-基本操作"><a href="#vim-基本操作" class="headerlink" title="vim 基本操作"></a>vim 基本操作</h4><ul><li>ESC 进入基本模式（可以输入如下命令）</li><li>:w 保存</li><li>:wq 保存并退出</li><li>:q 如未修改可退出</li><li>:q! 不保存并退出</li><li>i 进入插入模式</li></ul><hr><h3 id="termux-基本操作"><a href="#termux-基本操作" class="headerlink" title="termux 基本操作"></a>termux 基本操作</h3><h4 id="长按屏幕"><a href="#长按屏幕" class="headerlink" title="长按屏幕"></a>长按屏幕</h4><p>显示菜单项（包括粘贴复制等选项）</p><h4 id="左上角从左往右滑"><a href="#左上角从左往右滑" class="headerlink" title="左上角从左往右滑"></a>左上角从左往右滑</h4><p>显示隐藏式导航栏，可以新建，切换，重命名会话和调用弹入输入法</p><h4 id="显示拓展功能按键"><a href="#显示拓展功能按键" class="headerlink" title="显示拓展功能按键"></a>显示拓展功能按键</h4><h5 id="快捷键一览"><a href="#快捷键一览" class="headerlink" title="快捷键一览"></a>快捷键一览</h5><ul><li>Ctrl + A -&gt; 将光标移动到行首</li><li>Ctrl + C -&gt; 中止当前进程</li><li>Ctrl + D -&gt; 注销终端会话</li><li>Ctrl + E -&gt; 将光标移动到行尾</li><li>Ctrl + K -&gt; 从光标删除到行尾</li><li>Ctrl + U -&gt; 从光标删除到行首</li><li>Ctrl + L -&gt; 清除终端</li><li>Ctrl + Z -&gt;挂起（发送 SIGTSTP 到）当前进程</li><li>Ctrl + alt + C -&gt;打开新会话（仅适用于黑客键盘）</li><li>音量加 + E -&gt; Esc 键</li><li>音量加 + T -&gt; Tab 键</li><li>音量加 + 1 -&gt; F1（音量增加 + 2 →F2…以此类推）</li><li>音量加 + 0 -&gt; F10</li><li>音量加 + B -&gt; Alt + B，使用 readline 时返回一个单词</li><li>音量加 + F -&gt; Alt + F，使用 readline 时转发一个单词</li><li>音量加 + X -&gt; Alt+X</li><li>音量加 + W -&gt; 向上箭头键</li><li>音量加 + A -&gt; 向左箭头键</li><li>音量加 + S -&gt; 向下箭头键</li><li>音量加 + D -&gt; 向右箭头键</li><li>音量加 + L -&gt; | （管道字符）</li><li>音量加 + H -&gt; 〜（波浪号字符）</li><li>音量加 + U -&gt; _ (下划线字符)</li><li>音量加 + P -&gt; 上一页</li><li>音量加 + N -&gt; 下一页</li><li>音量加 + . -&gt; Ctrl + \（SIGQUIT）</li><li>音量加 + V -&gt; 显示音量控制</li><li>音量加 + Q -&gt; 切换显示的功能键视</li><li>音量加 + K -&gt; 切换显示的功能键视图</li></ul><h5 id="自定义附加键"><a href="#自定义附加键" class="headerlink" title="自定义附加键"></a>自定义附加键</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> ~/.termux/termux.properties<span class="token comment">#添加自定义键</span>extra-keys <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">\</span> <span class="token punctuation">[</span><span class="token string">'ESC'</span>,<span class="token string">'|'</span>,<span class="token string">'/'</span>,<span class="token string">'HOME'</span>,<span class="token string">'UP'</span>,<span class="token string">'END'</span>,<span class="token string">'$'</span>,<span class="token string">'DEL'</span><span class="token punctuation">]</span>, <span class="token punctuation">\</span><span class="token punctuation">[</span><span class="token string">'TAB'</span>,<span class="token string">'CTRL'</span>,<span class="token string">'-'</span>,<span class="token string">'LEFT'</span>,<span class="token string">'DOWN'</span>,<span class="token string">'RIGHT'</span>,<span class="token string">'"'</span>,<span class="token string">'BKSP'</span><span class="token punctuation">]</span> <span class="token punctuation">\</span> <span class="token punctuation">]</span><span class="token comment">#此操作是在输入法上端添加附加键</span><span class="token comment">#在文档中所有快捷键都有注释</span><span class="token comment">#HOME为首项，END为尾项</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="附加键说明如下"><a href="#附加键说明如下" class="headerlink" title="附加键说明如下"></a>附加键说明如下</h6><table><thead><tr><th>按键</th><th>说明</th></tr></thead><tbody><tr><td>CTRL</td><td>特殊按键</td></tr><tr><td>ALT</td><td>特殊按键</td></tr><tr><td>FN</td><td>特殊按键</td></tr><tr><td>ESC</td><td>退出键</td></tr><tr><td>TAB</td><td>表格键</td></tr><tr><td>HOME</td><td>原位键</td></tr><tr><td>END</td><td>结尾键</td></tr><tr><td>PGUP</td><td>上翻页键</td></tr><tr><td>PGDN</td><td>下翻页键</td></tr><tr><td>INS</td><td>插入键</td></tr><tr><td>DEL</td><td>删除键</td></tr><tr><td>BKSP</td><td>退格键</td></tr><tr><td>UP</td><td>方向键上</td></tr><tr><td>LEFT</td><td>方向键左</td></tr><tr><td>RIGHT</td><td>方向键右</td></tr><tr><td>DOWN</td><td>方向键下</td></tr><tr><td>ENTER</td><td>回车键</td></tr><tr><td>BACKSLASH</td><td>反斜杠\</td></tr><tr><td>QUPTE</td><td>双引号键</td></tr><tr><td>APOSTROPHE</td><td>单引号键</td></tr><tr><td>F1-F12</td><td>f1-f12 键</td></tr></tbody></table><p>注：上⾯列出的三个特殊键中的每⼀个最多只能在附加键定义中列出⼀次，超过次数将会报错。</p><h4 id="termux-目录环境结构"><a href="#termux-目录环境结构" class="headerlink" title="termux 目录环境结构"></a>termux 目录环境结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~ <span class="token operator">></span> <span class="token builtin class-name">echo</span> <span class="token environment constant">$HOME</span>/data/data/com.termux/files/home ~ <span class="token operator">></span> <span class="token builtin class-name">echo</span> <span class="token variable">$PREFIX</span>/data/data/com.termux/files/usr ~ <span class="token operator">></span> <span class="token builtin class-name">echo</span> <span class="token variable">$TMPPREFIX</span>/data/data/com.termux/files/usr/tmp/zsh<span class="token comment">#输入env可以查看各环境变量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="基本软件安装"><a href="#基本软件安装" class="headerlink" title="基本软件安装"></a>基本软件安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pkg <span class="token function">install</span> <span class="token function">curl</span> <span class="token function">git</span> <span class="token function">vim</span> <span class="token function">wget</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="更改国内源"><a href="#更改国内源" class="headerlink" title="更改国内源"></a>更改国内源</h4><p>提高下载速度，可更改 termux<code>清华大学源</code></p><h5 id="手动修改"><a href="#手动修改" class="headerlink" title="手动修改"></a>手动修改</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#下载vim文本编辑器</span><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">vim</span><span class="token function">vim</span> <span class="token variable">$PREFIX</span>/etc/apt/sources.list<span class="token function">vim</span> <span class="token variable">$PREFIX</span>/etc/apt/sources.list.d/science.list<span class="token function">vim</span> <span class="token variable">$PREFIX</span>/etc/apt/sources.list.d/game.list<span class="token comment">#或者</span><span class="token function">apt</span> edit-source<span class="token comment">#按i进入插入模式，将deb后的链接替换成http://mirrors.tuna.tsinghua.edu.cn/termux</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="自动配置"><a href="#自动配置" class="headerlink" title="自动配置"></a>自动配置</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#图像，但可能会出错</span>pkg <span class="token function">install</span> termux-tools<span class="token comment">#更新/安装termux-tools软件包</span>termux-change-repo<span class="token comment">#使用GUI界面选择镜像源Mirrors by USTC/选择Mirrors by Tsinghua University</span><span class="token comment">#自动替换</span><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s@^\(deb.*stable main\)$@#\1\ndebhttps://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@'</span><span class="token variable">$PREFIX</span>/etc/apt/sources.list<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s@^\(deb.*games stable\)$@#\1\ndebhttps://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@'</span><span class="token variable">$PREFIX</span>/etc/apt/sources.list.d/game.list<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s@^\(deb.*science stable\)$@#\1\ndebhttps://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science  stable@'</span><span class="token variable">$PREFIX</span>/etc/apt/sources.list.d/science.list pkg update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此，准备工作完成</p><hr><h3 id="常用软件安装"><a href="#常用软件安装" class="headerlink" title="常用软件安装"></a>常用软件安装</h3><h4 id="c-c-编辑"><a href="#c-c-编辑" class="headerlink" title="c&#x2F;c++编辑"></a>c&#x2F;c++编辑</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装c/c++编译器</span>pkg <span class="token function">install</span> gcc <span class="token function">make</span> g++<span class="token comment">#安装后查看版本号来判断是否安装成功</span>gcc <span class="token parameter variable">--version</span>g++ <span class="token parameter variable">--version</span><span class="token function">make</span> <span class="token parameter variable">--version</span><span class="token comment">#一般出现版本号就安装成功了</span><span class="token comment">#这里可以简单了解gcc的使用方法</span>gcc hello.c <span class="token parameter variable">-o</span> hello.o<span class="token comment">#更详细的查看帮助文档</span>gcc <span class="token parameter variable">--help</span><span class="token function">man</span> gcc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="MySQL-安装"><a href="#MySQL-安装" class="headerlink" title="MySQL 安装"></a>MySQL 安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装</span>pkg <span class="token function">install</span> mysql<span class="token comment">#启动MySQL服务器</span>mysqld<span class="token comment">#另启动一个会话</span>mysql<span class="token comment">#或mysql -u root -p</span><span class="token comment">#如不想另启动一个会话</span><span class="token function">nohup</span> mysqld <span class="token operator">&amp;</span><span class="token comment">#会出现一个进程号PID</span><span class="token comment">#如要终止</span><span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token string">'PID'</span><span class="token comment">#或kill -9 'pgrep mysqld'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="python3-安装"><a href="#python3-安装" class="headerlink" title="python3 安装"></a>python3 安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装</span>pkg <span class="token function">install</span> python<span class="token comment">#查看版本</span>python <span class="token parameter variable">--version</span><span class="token comment">#在安装python时会同时安装pip</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="更多的软件"><a href="#更多的软件" class="headerlink" title="更多的软件"></a>更多的软件</h4><p>敬请期待</p><h3 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h3><p>termux 内置 bash 这个 shell，但插件较少，可以通过安装 zsh 这个 shell 来进行美化。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#让termux能够访问内部存储，在Android6版本以上会弹出弹窗请求访问内部存储，同意即可</span>termux-setup-storage<span class="token comment">#安装zsh，-y选项是默认yes不用再选择了</span><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">zsh</span> <span class="token parameter variable">-y</span><span class="token comment">#修改为默认shell</span>chsh <span class="token parameter variable">-s</span> /bin/zsh<span class="token comment">#安装oh-my-zsh插件，这一步可能需要科学上网</span><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh<span class="token variable">)</span></span>"</span><span class="token comment">#运行完这个脚本后会分别让你选择背景色和字体，可能看个人爱好，我推荐主题色14，字体默认（会在安装主题时更改）</span><span class="token comment">#更改背景色/字体</span>chcolor <span class="token comment">#或~/.termux/colors.sh</span>chfont <span class="token comment">#或~/.termux/fonts.sh</span><span class="token comment">#修改欢迎界面</span><span class="token function">vim</span> <span class="token variable">$PREFIX</span>/etc/motd<span class="token comment">#将其中文字修改成自己想要的即可，如果想要字符画，可以安装figlet来生成</span>pkg <span class="token function">install</span> figlet<span class="token comment">#使用方法：</span>figlet <span class="token parameter variable">-f</span> 字体 字符<span class="token comment">#然后复制到motd即可</span><span class="token comment">#若"figlet 字符"则会是默认字体</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="http://www.figlet.org/">figlet 官网</a><br><a href="http://www.figlet.org/fontdb.cgi">figlet 字体示例</a></p><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p>zsh 之所以备受欢迎不仅仅是因为配色和主题，也有各种各样的插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#autosuggestions插件</span><span class="token comment">#根据自己的习惯自动提示接下来要使用的命令，按向右方向键自动补全</span><span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class="token variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<span class="token comment">#syntax-highlighting插件</span><span class="token comment">#语法高亮</span><span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="token variable">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlighting<span class="token comment">#在.zshrc文件中配置：</span><span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>其他插件 zsh-autosuggestions zsh-syntax-highlighting<span class="token punctuation">)</span><span class="token comment">#重启生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h4><p>推荐 powerlevel10k 主题<br>该主题会通过用户的选择来显示</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token number">1</span> https://gitee.com/romkatv/powerlevel10k.git <span class="token variable">$&#123;ZSH_CUSTOM<span class="token operator">:-</span>$HOME<span class="token operator">/</span>.oh-my-zsh<span class="token operator">/</span>custom&#125;</span>/themes/powerlevel10k<span class="token comment">#在./zshrc文件中配置：</span><span class="token assign-left variable">ZSH_THEME</span><span class="token operator">=</span><span class="token punctuation">&#123;</span>powerlevel10k/powerlevel10k<span class="token punctuation">&#125;</span><span class="token comment">#安装引导界面推荐的字体</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>官方主题<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes">戳此</a>获取，使用方法是将 ZSH_THEME 中修改成对应名称。</p><hr><h3 id="安装-Linux-发行版"><a href="#安装-Linux-发行版" class="headerlink" title="安装 Linux 发行版"></a>安装 Linux 发行版</h3><p>termux 在手机没有 root 权限也可以使用，可以模拟出一个 root 环境<br>首先要安装 proot</p><h4 id="官方做法"><a href="#官方做法" class="headerlink" title="官方做法"></a>官方做法</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pkg <span class="token function">install</span> proot <span class="token parameter variable">-y</span><span class="token comment">#切换成模拟的root用户</span>termux-chroot<span class="token comment">#安装套件</span>pkg <span class="token function">install</span> proot-distro<span class="token comment">#查询帮助文档</span>proot-distro <span class="token parameter variable">--help</span><span class="token comment">#列出支持的Linux</span>proot-distro list<span class="token comment">#安装，&lt;alias>是Linux的别名，如我要安装Ubuntu20.04版本，则输入ubuntu-20.04</span>proot-distro <span class="token function">install</span> <span class="token operator">&lt;</span>alias<span class="token operator">></span><span class="token comment">#进入Linux环境</span>proot-distro login <span class="token operator">&lt;</span>alias<span class="token operator">></span><span class="token comment">#如果认为进入Linux的命令过长，可以设置别名，先进入.zshrc文件</span><span class="token builtin class-name">alias</span> 别名<span class="token operator">=</span><span class="token string">"proot-distro login &lt;alias>"</span><span class="token comment">#令上述命令生效</span><span class="token builtin class-name">source</span> ~.zshrc<span class="token comment">#或者将该行命令写入sh脚本中</span><span class="token comment">#创建sh脚本</span><span class="token function">touch</span> 名称.sh<span class="token comment">#然后粘贴进去，以后只要运行该脚本即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://wiki.termux.com/wiki/PRoot#Installing_Linux_distributions">官方文档</a></p><h4 id="使用他人脚本"><a href="#使用他人脚本" class="headerlink" title="使用他人脚本"></a>使用他人脚本</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#注意要在termux上已经安装了git和python</span><span class="token function">git</span> clone https://github.com/sqlsec/termux-install-linux<span class="token builtin class-name">cd</span> termux-install-linuxpython termux-linux-install.py<span class="token comment">#当安装成功后，如安装Ubuntu后，通过如下命令使用</span><span class="token builtin class-name">cd</span> ~/Termux-Linux/Ubuntu./start-ubuntu.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://github.com/sqlsec/termux-install-linux">github 国光脚本</a></p><hr><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>该文档使用 markdown 编写，参考多位分享者的文档，当然 termux 不止如此，更多的操作由你来实现。</p><p><b><h1 style="color:DodgerBlue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;三夏</h1></b></p>]]></content>
      
      
      <categories>
          
          <category> 关于Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> termux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
